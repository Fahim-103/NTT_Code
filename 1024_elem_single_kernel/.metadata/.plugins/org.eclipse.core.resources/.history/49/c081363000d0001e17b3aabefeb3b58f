//taking two 16 bit buffers (xbuff, zbuff) and multiplying

//#include <adf.h>
#include "nttsub11.h"
#include "include.h"
#include "twiddle.h"



using namespace adf;

void test_multiply (input_window_int32  * restrict inputx,
			        output_window_int32 * restrict outputy){




	aie::vector<int16,8>  w, wcn , t, xx, yy;
	aie::vector<int32,8> x, y ;
	aie::vector<int32,4>z, z1, e,f , x1, x2;
	aie::accum<acc48,8> b;
	aie::accum<acc80,4> c,d,d1;

	w=aie::broadcast<int16,8>(0xffff);  // 2147483648 4294967285
	w[1] = 0;
	w[3] = 0;
	w[5] = 0;
	w[7] = 0;


	wcn=aie::broadcast<int16,8>(9);
	t=aie::broadcast<int16,8>(1);


	z = as_v4int32(w);
	e = aie::broadcast<int32,4>(0xFFFFF);
	z1 = aie::broadcast<int32,4>(0xFFFFFF);
	f = aie::broadcast<int32,4>(1);

	c = mul(z,e);
	d = mul(z,f);
	d1 = mul(z1,e);

	x1 = srs(c,32);
	x2 = srs(mul(z,e),32);



	//set_sat ();
	int a = get_MD 	(0);



	//aie::print(b, true, "acc ");
	//aie::print(x, true, "x ");
	//aie::print(w, true, "w ");
	aie::print(z, true, "z ");
	aie::print(c, true, "c ");
	aie::print(d, true, "d ");
	aie::print(d1, true, "d1 ");
	aie::print(x1, true, "x1 ");
	aie::print(x2, true, "x2 ");

	printf("%d ", a);



}

